openapi: 3.0.0
servers:
  - description: SwaggerHub API Auto Mocking
    url: https://virtserver.swaggerhub.com/harelbrener/api1/1.0.0
info:
  description: This is a simple API
  version: "1.0.0"
  title: Grandma's Recipes API
  contact:
    email: harelbr@post.bgu.ac.il
  license:
    name: Apache 2.0
    url: 'http://www.apache.org/licenses/LICENSE-2.0.html'
tags:
  - name: auth
    description: Authentication endpoints
  - name: recipes
    description: Operations on recipes
  - name: users
    description: User-specific operations (requires authentication)
paths:
  /auth/Register:
    post:
      tags:
        - auth
      summary: Register a new user
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserRegistration'
            example:
              username: johndoe
              firstname: John
              lastname: Doe
              country: Israel
              email: johndoe@example.com
              password: Abc@1234
              profilePic: https://example.com/images/johndoe.jpg
      responses:
        '201':
          description: User created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericSuccessResponse'

  /auth/Login:
    post:
      tags:
        - auth
      summary: Login
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserLogin'
            example:
              username: johndoe
              password: Abc@1234
      responses:
        '200':
          description: Login successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericSuccessResponse'

  /auth/Logout:
    post:
      tags:
        - auth
      summary: Logout the current user
      responses:
        '200':
          description: Logout successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LogoutResponse'

  /recipes/search:
    get:
      tags:
        - recipes
      summary: Get a list of recipes by search parameters
      parameters:
        - in: query
          name: query
          schema:
            type: string
          description: Search keyword(s) for recipe title or ingredients
        - in: query
          name: cuisine
          schema:
            type: string
          description: Cuisine type (e.g., Italian, Mexican)
        - in: query
          name: diet
          schema:
            type: string
          description: Diet type (e.g., vegetarian, vegan)
        - in: query
          name: intolerances
          schema:
            type: string
          description: Comma-separated list of intolerances (e.g., gluten)
      responses:
        '200':
          description: A list of recipe previews matching the search
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/RecipePreview'

  /recipes/random:
    get:
      tags:
        - recipes
      summary: Get a list of random recipes
      parameters:
        - in: query
          name: number
          required: true
          schema:
            type: integer
            minimum: 1
          description: Number of random recipes to retrieve
      responses:
        '200':
          description: A list of random recipe previews
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/RecipePreview'

  /recipes/likes:
    get:
      tags:
        - recipes
      summary: Get the number of likes for a specific recipe
      parameters:
        - in: query
          name: id
          required: true
          schema:
            type: integer
          description: The recipe ID
      responses:
        '200':
          description: Likes count for the given recipe
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LikesResponse'

  /recipes/information:
    get:
      tags:
        - recipes
      summary: Get full details of a recipe by its ID
      parameters:
        - in: query
          name: id
          required: true
          schema:
            type: integer
          description: The recipe ID
      responses:
        '200':
          description: Recipe details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RecipeDetails'

  /recipes:
    post:
      tags:
        - recipes
      summary: Create a new recipe entry
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NewRecipe'
            example:
              title: Grandma's Chocolate Cake
              readyInMinutes: 90
              image: https://example.com/images/chocolate_cake.jpg
              vegan: false
              vegetarian: true
              glutenFree: false
      responses:
        '201':
          description: Recipe created successfully

  /users/favorites:
    post:
      tags:
        - users
      summary: Save a recipe to the logged-in user's favorites
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - recipeId
              properties:
                recipeId:
                  type: integer
                  description: The ID of the recipe to mark as favorite
            example:
              recipeId: 12345
      responses:
        '200':
          description: Recipe saved as favorite successfully

    get:
      tags:
        - users
      summary: Get favorite recipes of the logged-in user
      responses:
        '200':
          description: Array of recipe IDs saved as favorites
          content:
            application/json:
              schema:
                type: array
                items:
                  type: integer

  /users/history:
    get:
      tags:
        - users
      summary: Get the last three recipes viewed by the logged-in user
      responses:
        '200':
          description: Array of recipe IDs from viewing history
          content:
            application/json:
              schema:
                type: array
                items:
                  type: integer

  /users/likespooncular:
    post:
      tags:
        - users
      summary: Toggle like status for a Spoonacular recipe
      parameters:
        - in: query
          name: id
          required: true
          schema:
            type: integer
          description: The Spoonacular recipe ID to like/unlike
      responses:
        '200':
          description: Recipe like status updated successfully

  /users/likedb:
    post:
      tags:
        - users
      summary: Toggle like status for a locally stored recipe
      parameters:
        - in: query
          name: id
          required: true
          schema:
            type: integer
          description: The local database recipe ID to like/unlike
      responses:
        '200':
          description: Recipe like status updated successfully

  /users/familyRecipes:
    get:
      tags:
        - users
      summary: Get family recipes from database for the logged-in user
      responses:
        '200':
          description: Array of family recipe previews
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/RecipePreview'

    post:
      tags:
        - users
      summary: Add a new family recipe for the logged-in user
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NewRecipe'
            example:
              title: Aunt Mary's Latkes
              readyInMinutes: 40
              image: https://example.com/images/latkes.jpg
              vegan: false
              vegetarian: true
              glutenFree: false
      responses:
        '201':
          description: Family recipe added successfully

components:
  schemas:
    UserRegistration:
      type: object
      required:
        - username
        - firstname
        - lastname
        - country
        - email
        - password
      properties:
        username:
          type: string
        firstname:
          type: string
        lastname:
          type: string
        country:
          type: string
        email:
          type: string
          format: email
        password:
          type: string
        profilePic:
          type: string
          format: uri

    UserLogin:
      type: object
      required:
        - username
        - password
      properties:
        username:
          type: string
        password:
          type: string

    RecipePreview:
      type: object
      properties:
        id:
          type: integer
          description: The unique ID of the recipe
        title:
          type: string
        image:
          type: string
          format: uri
        popularity:
          type: integer
          description: Aggregated likes count (Spoonacular + user likes)
        vegan:
          type: boolean
        vegetarian:
          type: boolean
        glutenFree:
          type: boolean

    RecipeDetails:
      type: object
      properties:
        id:
          type: integer
          description: The unique ID of the recipe
        title:
          type: string
        readyInMinutes:
          type: integer
          description: Time (in minutes) to prepare and cook the recipe
        image:
          type: string
          format: uri
        popularity:
          type: integer
          description: Aggregated likes count (Spoonacular + user likes)
        vegan:
          type: boolean
        vegetarian:
          type: boolean
        glutenFree:
          type: boolean

    NewRecipe:
      type: object
      required:
        - title
        - readyInMinutes
        - image
        - vegan
        - vegetarian
        - glutenFree
      properties:
        title:
          type: string
        readyInMinutes:
          type: integer
          description: Time (in minutes) to prepare and cook
        image:
          type: string
          format: uri
        vegan:
          type: boolean
        vegetarian:
          type: boolean
        glutenFree:
          type: boolean

    LikesResponse:
      type: object
      properties:
        recipeId123:
          type: integer
          description: The recipe ID
        likes:
          type: integer
          description: Number of likes for the recipe

    GenericSuccessResponse:
      type: object
      properties:
        message:
          type: string
        success:
          type: boolean

    LogoutResponse:
      type: object
      properties:
        success:
          type: boolean
        message:
          type: string
